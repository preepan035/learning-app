import React, { useState } from 'react';
import { StyleSheet, View, Text, ScrollView, TouchableOpacity, SafeAreaView, Share } from 'react-native';
import { Ionicons } from '@expo/vector-icons';

const LessonDetailScreen = ({ route, navigation }) => {
  const { content } = route.params;
  const [isBookmarked, setIsBookmarked] = useState(false);
  const [showQuiz, setShowQuiz] = useState(false);
  
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Markdown ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô JSX elements
  const renderMarkdown = (text) => {
    if (!text) return null;
    
    // ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
    const lines = text.split('\n');
    
    return lines.map((line, index) => {
      // ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÉ‡∏´‡∏ç‡πà (h1) ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ #
      if (line.startsWith('# ')) {
        return (
          <Text key={index} style={styles.heading1}>
            {line.substring(2)}
          </Text>
        );
      }
      // ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏£‡∏≠‡∏á (h2) ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ ##
      else if (line.startsWith('## ')) {
        return (
          <Text key={index} style={styles.heading2}>
            {line.substring(3)}
          </Text>
        );
      }
      // ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏¢‡πà‡∏≠‡∏¢ (h3) ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ ###
      else if (line.startsWith('### ')) {
        return (
          <Text key={index} style={styles.heading3}>
            {line.substring(4)}
          </Text>
        );
      }
      // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå (bullet)
      else if (line.startsWith('- ')) {
        return (
          <View key={index} style={styles.bulletItem}>
            <Text style={styles.bullet}>‚Ä¢</Text>
            <Text style={styles.bulletText}>{line.substring(2)}</Text>
          </View>
        );
      }
      // ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ß‡πà‡∏≤‡∏á
      else if (line.trim() === '') {
        return <View key={index} style={styles.emptyLine} />;
      }
      // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
      else {
        return (
          <Text key={index} style={styles.paragraph}>
            {line}
          </Text>
        );
      }
    });
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ä‡∏£‡πå‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  const shareLesson = async () => {
    try {
      await Share.share({
        message: `‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ "${route.params.title}" ‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ Thai Learning App`,
      });
    } catch (error) {
      console.log(error.message);
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏∏‡πä‡∏Ñ‡∏°‡∏≤‡∏£‡πå‡∏Ñ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  const toggleBookmark = () => {
    setIsBookmarked(!isBookmarked);
    // ‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏à‡∏£‡∏¥‡∏á‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠ AsyncStorage
  };

  // ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏•‡∏≠‡∏á
  const quizData = [
    {
      question: '‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏°‡∏µ‡∏ß‡∏£‡∏£‡∏ì‡∏¢‡∏∏‡∏Å‡∏ï‡πå‡∏Å‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏á?',
      options: ['3 ‡πÄ‡∏™‡∏µ‡∏¢‡∏á', '4 ‡πÄ‡∏™‡∏µ‡∏¢‡∏á', '5 ‡πÄ‡∏™‡∏µ‡∏¢‡∏á', '6 ‡πÄ‡∏™‡∏µ‡∏¢‡∏á'],
      correctAnswer: 2 // index ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (5 ‡πÄ‡∏™‡∏µ‡∏¢‡∏á)
    },
    {
      question: '‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ" ‡πÉ‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏Ñ‡∏∑‡∏≠?',
      options: ['Thank you', 'Hello', 'Goodbye', 'Yes'],
      correctAnswer: 1 // index ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (Hello)
    }
  ];

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
  const renderQuiz = () => {
    if (!showQuiz) return null;

    return (
      <View style={styles.quizContainer}>
        <Text style={styles.quizTitle}>‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</Text>
        {quizData.map((quiz, index) => (
          <View key={index} style={styles.quizItem}>
            <Text style={styles.quizQuestion}>{index + 1}. {quiz.question}</Text>
            {quiz.options.map((option, optIndex) => (
              <TouchableOpacity 
                key={optIndex} 
                style={styles.quizOption}
                onPress={() => alert(optIndex === quiz.correctAnswer ? '‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! üéâ' : '‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á')}
              >
                <Text style={styles.quizOptionText}>{option}</Text>
              </TouchableOpacity>
            ))}
          </View>
        ))}
      </View>
    );
  };

  return (
    <SafeAreaView style={styles.container}>
      <ScrollView contentContainerStyle={styles.scrollContainer}>
        <View style={styles.contentContainer}>
          {renderMarkdown(content)}
          
          {renderQuiz()}
          
          <View style={styles.actionsContainer}>
            <TouchableOpacity 
              style={styles.actionButton}
              onPress={toggleBookmark}
            >
              <Ionicons 
                name={isBookmarked ? 'bookmark' : 'bookmark-outline'} 
                size={22} 
                color="#5e72e4" 
              />
              <Text style={styles.actionText}>‡∏ö‡∏∏‡πä‡∏Ñ‡∏°‡∏≤‡∏£‡πå‡∏Ñ</Text>
            </TouchableOpacity>
            
            <TouchableOpacity 
              style={styles.actionButton}
              onPress={shareLesson}
            >
              <Ionicons name="share-social-outline" size={22} color="#5e72e4" />
              <Text style={styles.actionText}>‡πÅ‡∏ä‡∏£‡πå</Text>
            </TouchableOpacity>
            
            <TouchableOpacity 
              style={styles.actionButton}
              onPress={() => setShowQuiz(!showQuiz)}
            >
              <Ionicons name="help-circle-outline" size={22} color="#5e72e4" />
              <Text style={styles.actionText}>{showQuiz ? '‡∏ã‡πà‡∏≠‡∏ô' : '‡πÅ‡∏™‡∏î‡∏á'}‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö</Text>
            </TouchableOpacity>
          </View>
        </View>
      </ScrollView>
      
      <View style={styles.footer}>
        <TouchableOpacity 
          style={styles.nextButton}
          onPress={() => navigation.navigate('LessonList')}
        >
          <Text style={styles.nextButtonText}>‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</Text>
          <Ionicons name="arrow-forward" size={20} color="#fff" />
        </TouchableOpacity>
      </View>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  scrollContainer: {
    paddingBottom: 80, // ‡πÉ‡∏´‡πâ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö footer
  },
  contentContainer: {
    padding: 20,
  },
  heading1: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#5e72e4',
    marginBottom: 15,
    marginTop: 10,
  },
  heading2: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#525f7f',
    marginBottom: 12,
    marginTop: 20,
  },
  heading3: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#32325d',
    marginBottom: 10,
    marginTop: 15,
  },
  paragraph: {
    fontSize: 16,
    lineHeight: 24,
    color: '#525f7f',
    marginBottom: 10,
  },
  bulletItem: {
    flexDirection: 'row',
    marginBottom: 8,
    paddingLeft: 8,
  },
  bullet: {
    fontSize: 16,
    marginRight: 8,
    color: '#5e72e4',
  },
  bulletText: {
    fontSize: 16,
    lineHeight: 24,
    color: '#525f7f',
    flex: 1,
  },
  emptyLine: {
    height: 12,
  },
  actionsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    borderTopWidth: 1,
    borderTopColor: '#e9ecef',
    paddingTop: 20,
    marginTop: 20,
  },
  actionButton: {
    alignItems: 'center',
  },
  actionText: {
    fontSize: 12,
    color: '#8898aa',
    marginTop: 5,
  },
  footer: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    backgroundColor: '#fff',
    padding: 15,
    borderTopWidth: 1,
    borderTopColor: '#e9ecef',
  },
  nextButton: {
    backgroundColor: '#5e72e4',
    borderRadius: 10,
    padding: 15,
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    shadowColor: '#5e72e4',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.3,
    shadowRadius: 10,
    elevation: 6,
  },
  nextButtonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
    marginRight: 10,
  },
  quizContainer: {
    marginTop: 30,
    marginBottom: 20,
    backgroundColor: '#f8f9fe',
    borderRadius: 15,
    padding: 20,
    borderWidth: 1,
    borderColor: '#e9ecef',
  },
  quizTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#5e72e4',
    marginBottom: 20,
    textAlign: 'center',
  },
  quizItem: {
    marginBottom: 20,
  },
  quizQuestion: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#525f7f',
    marginBottom: 10,
  },
  quizOption: {
    backgroundColor: '#fff',
    borderWidth: 1,
    borderColor: '#e9ecef',
    borderRadius: 8,
    padding: 12,
    marginBottom: 8,
  },
  quizOptionText: {
    fontSize: 14,
    color: '#525f7f',
  }
});

export default LessonDetailScreen;